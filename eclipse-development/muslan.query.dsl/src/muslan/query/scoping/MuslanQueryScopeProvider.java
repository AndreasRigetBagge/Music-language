/*
 * generated by Xtext 2.38.0
 */
package muslan.query.scoping;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import musiccollection.MusicCollection;
import query.QueryPackage;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */

public class MuslanQueryScopeProvider extends AbstractMuslanQueryScopeProvider {
	
	@Override
    public IScope getScope(EObject context, EReference reference) {
        if (reference == QueryPackage.Literals.QUERY__COLLECTION) {
            ResourceSet rs = context.eResource().getResourceSet();
            List<MusicCollection> collections = new ArrayList<>();
            for (Resource r : rs.getResources()) {
                collections.addAll(EcoreUtil2.getAllContentsOfType(r, MusicCollection.class));
            }
            return Scopes.scopeFor(collections, IScope.NULLSCOPE);
        }
        return super.getScope(context, reference);
    }
}
